requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "research_index_backend"
dynamic = ["version"]
description = 'A data cleaning and ingest tool for the CCG Research Index'
readme = "readme.md"
requires-python = ">=3.10"
license = {file = "LICENSE.txt"}
keywords = []
authors = [
  { name = "Will Usher", email = "wusher@kth.se" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["tqdm", "gqlalchemy", "pandas", "rdflib", "requests", "requests_cache", "dotenv"]

[project.urls]
Documentation = "https://github.com/ClimateCompatibleGrowth/research_index_backend#readme"
Issues = "https://github.com/ClimateCompatibleGrowth/research_index_backend/issues"
Source = "https://github.com/ClimateCompatibleGrowth/research_index_backend"

[tool.hatch.version]
source = "vcs"

[project.scripts]
research_index = "research_index_backend:entry_point"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/research_index_backend tests}"

[tool.coverage.run]
source_pkgs = ["research_index_backend", "tests"]
branch = true
parallel = true
omit = [
  "src/research_index_backend/__about__.py",
]

[tool.coverage.paths]
research_index_backend = ["src/research_index_backend", "*/research-index-backend/src/research_index_backend"]
tests = ["tests", "*/research-index-backend/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
line-length=79

[tool.isort]
profile = "black"
